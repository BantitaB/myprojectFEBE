import React, { useEffect, useState, useRef } from "react";
import { Card, Button, Spinner } from "react-bootstrap";
import { useNavigate } from "react-router-dom";

const OrderSuccess = () => {
    const navigate = useNavigate();
    const [loading, setLoading] = useState(false);
    const [error, setError] = useState(null);
    const [success, setSuccess] = useState(false);
    const orderSentRef = useRef(false);

    const savedCartItems = sessionStorage.getItem("cartItems");
    const parsedCartItems = JSON.parse(savedCartItems);
    console.log("Received parsedCartItems:", parsedCartItems);

    // ‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á cart_item_id ‡∏à‡∏≤‡∏Å parsedCartItems ‡∏ã‡∏∂‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô array
    const cartItemIds = parsedCartItems.map(item => item.cart_item_id);
    console.log("Received cartItemIds:", cartItemIds);  // ‡∏à‡∏∞‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡πá‡∏ô array ‡∏Ç‡∏≠‡∏á cart_item_id

    useEffect(() => {
        if (!orderSentRef.current) {
            sendOrderData();
            orderSentRef.current = true; // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ô‡∏µ‡πâ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠
        }
    });

    const sendOrderData = async () => {
        if (orderSentRef.current) {
            console.log("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß");
            return;
        }

        if (!parsedCartItems) {
            setError("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô");
            return;
        }

        try {
            setLoading(true);

            const response = await fetch("http://localhost:8080/api/v1/order/create", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({
                    cart_item_id: cartItemIds,
                    total_amount: parsedCartItems[0].total_price,
                }),
            });

            if (!response.ok) {
                throw new Error("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÑ‡∏î‡πâ");
            }

            const result = await response.json();
            console.log("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß:", result);

            orderSentRef.current = true;
            setSuccess(true);

        } catch (error) {
            console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠:", error);
            setError(error.message);
        } finally {
            setLoading(false);
        }
    };

    return (
        <div
            style={{
                width: "100vw",
                height: "100vh",
                display: "flex",
                justifyContent: "center",
                alignItems: "center",
            }}
        >
            <Card style={{ width: "50%", padding: "2rem", textAlign: "center" }}>
                <h1>üéâ ‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à üéâ</h1>
                <p>‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì</p>

                {loading ? (
                    <div>
                        <Spinner animation="border" />
                        <p>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠...</p>
                    </div>
                ) : error ? (
                    <div>
                        <p style={{ color: "red" }}>‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {error}</p>
                    </div>
                ) : success ? (
                    <div>
                        <p style={{ color: "green" }}>‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏•‡πâ‡∏ß</p>
                    </div>
                ) : null}

                <div style={{ marginTop: "1rem" }}>
                    <Button
                        variant="success"
                        onClick={() => {
                            navigate("/");
                        }}
                        style={{ marginRight: "1rem" }}
                    >
                        ‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å
                    </Button>
                    <Button
                        variant="primary"
                        onClick={() => {
                            navigate("/order-tracking");
                        }}
                    >
                        ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠
                    </Button>
                </div>
            </Card>
        </div>
    );
};

export default OrderSuccess;
